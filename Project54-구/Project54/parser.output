

Terminals which are not used:

   TDOT
   TERROR


Conflict in state 155 between rule 56 and token TELSE resolved as shift.

Grammar
rule 1    mini_c -> translation_unit
rule 2    translation_unit -> external_dcl
rule 3    translation_unit -> translation_unit external_dcl
rule 4    external_dcl -> function_def
rule 5    external_dcl -> declaration
rule 6    function_def -> function_header compound_st
rule 7    function_header -> dcl_spec function_name formal_param
rule 8    dcl_spec -> dcl_specifiers
rule 9    dcl_specifiers -> dcl_specifier
rule 10   dcl_specifiers -> dcl_specifiers dcl_specifier
rule 11   dcl_specifier -> type_qualifier
rule 12   dcl_specifier -> type_specifier
rule 13   type_qualifier -> TCONST
rule 14   type_specifier -> TINT
rule 15   type_specifier -> TVOID
rule 16   type_specifier -> TFLOAT
rule 17   type_specifier -> TCHAR
rule 18   function_name -> TIDENT
rule 19   formal_param -> TLPAREN opt_formal_param TRPAREN
rule 20   formal_param -> TLPAREN error
rule 21   opt_formal_param -> TVOID
rule 22   opt_formal_param -> formal_param_list
rule 23   opt_formal_param ->		/* empty */
rule 24   formal_param_list -> param_dcl
rule 25   formal_param_list -> formal_param_list TCOMMA param_dcl
rule 26   param_dcl -> dcl_spec TIDENT
rule 27   param_dcl -> dcl_spec TIDENT TLSQUARE opt_number TRSQUARE
rule 28   compound_st -> TLBRACE opt_dcl_list opt_stat_list TRBRACE
rule 29   opt_dcl_list -> declaration_list
rule 30   opt_dcl_list ->		/* empty */
rule 31   declaration_list -> declaration
rule 32   declaration_list -> declaration_list declaration
rule 33   declaration -> dcl_spec init_dcl_list TSEMI
rule 34   init_dcl_list -> init_declarator
rule 35   init_dcl_list -> init_dcl_list TCOMMA init_declarator
rule 36   init_declarator -> declarator
rule 37   init_declarator -> declarator TASSIGN TINTNUM
rule 38   init_declarator -> declarator TASSIGN TFLOATNUM
rule 39   init_declarator -> declarator TASSIGN TSTRING
rule 40   declarator -> TIDENT
rule 41   declarator -> TIDENT TLSQUARE opt_number TRSQUARE
rule 42   opt_number -> TINTNUM
rule 43   opt_number ->		/* empty */
rule 44   opt_stat_list -> statement_list
rule 45   opt_stat_list ->		/* empty */
rule 46   statement_list -> statement
rule 47   statement_list -> statement_list statement
rule 48   statement -> compound_st
rule 49   statement -> expression_st
rule 50   statement -> if_st
rule 51   statement -> while_st
rule 52   statement -> return_st
rule 53   expression_st -> opt_expression TSEMI
rule 54   opt_expression -> expression
rule 55   opt_expression ->		/* empty */
rule 56   if_st -> TIF TLPAREN expression TRPAREN statement
rule 57   if_st -> TIF TLPAREN expression TRPAREN statement TELSE statement
rule 58   while_st -> TWHILE TLPAREN expression TRPAREN statement
rule 59   return_st -> TRETURN opt_expression TSEMI
rule 60   expression -> assignment_exp
rule 61   assignment_exp -> logical_or_exp
rule 62   assignment_exp -> unary_exp TASSIGN assignment_exp
rule 63   assignment_exp -> unary_exp TADDASSIGN assignment_exp
rule 64   assignment_exp -> unary_exp TSUBASSIGN assignment_exp
rule 65   assignment_exp -> unary_exp TMULASSIGN assignment_exp
rule 66   assignment_exp -> unary_exp TDIVASSIGN assignment_exp
rule 67   assignment_exp -> unary_exp TMODASSIGN assignment_exp
rule 68   logical_or_exp -> logical_and_exp
rule 69   logical_or_exp -> logical_or_exp TOR logical_and_exp
rule 70   logical_and_exp -> equality_exp
rule 71   logical_and_exp -> logical_and_exp TAND equality_exp
rule 72   equality_exp -> relational_exp
rule 73   equality_exp -> equality_exp TEQUAL relational_exp
rule 74   equality_exp -> equality_exp TNOTEQU relational_exp
rule 75   relational_exp -> additive_exp
rule 76   relational_exp -> relational_exp TGREAT additive_exp
rule 77   relational_exp -> relational_exp TLESS additive_exp
rule 78   relational_exp -> relational_exp TGREATE additive_exp
rule 79   relational_exp -> relational_exp TLESSE additive_exp
rule 80   additive_exp -> multiplicative_exp
rule 81   additive_exp -> additive_exp TPLUS multiplicative_exp
rule 82   additive_exp -> additive_exp TMINUS multiplicative_exp
rule 83   multiplicative_exp -> unary_exp
rule 84   multiplicative_exp -> multiplicative_exp TMUL unary_exp
rule 85   multiplicative_exp -> multiplicative_exp TDIV unary_exp
rule 86   multiplicative_exp -> multiplicative_exp TMOD unary_exp
rule 87   unary_exp -> postfix_exp
rule 88   unary_exp -> TMINUS unary_exp
rule 89   unary_exp -> TNOT unary_exp
rule 90   unary_exp -> TINC unary_exp
rule 91   unary_exp -> TDEC unary_exp
rule 92   postfix_exp -> primary_exp
rule 93   postfix_exp -> postfix_exp TLSQUARE expression TRSQUARE
rule 94   postfix_exp -> postfix_exp TLPAREN opt_actual_param TRPAREN
rule 95   postfix_exp -> postfix_exp TINC
rule 96   postfix_exp -> postfix_exp TDEC
rule 97   opt_actual_param -> actual_param
rule 98   opt_actual_param ->		/* empty */
rule 99   actual_param -> actual_param_list
rule 100  actual_param_list -> assignment_exp
rule 101  actual_param_list -> actual_param_list TCOMMA assignment_exp
rule 102  primary_exp -> TIDENT
rule 103  primary_exp -> TINTNUM
rule 104  primary_exp -> TFLOATNUM
rule 105  primary_exp -> TLPAREN expression TRPAREN

Terminals, with rules where they appear

$ (-1)
error (256) 20
TCONST (258) 13
TELSE (259) 57
TIF (260) 56 57
TINT (261) 14
TRETURN (262) 59
TVOID (263) 15 21
TWHILE (264) 58
TPLUS (265) 81
TMINUS (266) 82 88
TMUL (267) 84
TDIV (268) 85
TMOD (269) 86
TASSIGN (270) 37 38 39 62
TEQUAL (271) 73
TNOTEQU (272) 74
TLESSE (273) 79
TGREATE (274) 78
TAND (275) 71
TOR (276) 69
TINC (277) 90 95
TDEC (278) 91 96
TADDASSIGN (279) 63
TSUBASSIGN (280) 64
TMULASSIGN (281) 65
TDIVASSIGN (282) 66
TMODASSIGN (283) 67
TIDENT (284) 18 26 27 40 41 102
TLPAREN (285) 19 20 56 57 58 94 105
TRPAREN (286) 19 56 57 58 94 105
TLBRACE (287) 28
TRBRACE (288) 28
TLSQUARE (289) 27 41 93
TRSQUARE (290) 27 41 93
TCOMMA (291) 25 35 101
TDOT (292)
TSEMI (293) 33 53 59
TNOT (294) 89
TLESS (295) 77
TGREAT (296) 76
TINTNUM (297) 37 42 103
TFLOATNUM (298) 38 104
TSTRING (299) 39
TCHAR (300) 17
TFLOAT (301) 16
TERROR (302)
TLOWERTHANELSE (303)

Nonterminals, with rules where they appear

mini_c (49)
    on left: 1
translation_unit (50)
    on left: 2 3, on right: 1 3
external_dcl (51)
    on left: 4 5, on right: 2 3
function_def (52)
    on left: 6, on right: 4
function_header (53)
    on left: 7, on right: 6
dcl_spec (54)
    on left: 8, on right: 7 26 27 33
dcl_specifiers (55)
    on left: 9 10, on right: 8 10
dcl_specifier (56)
    on left: 11 12, on right: 9 10
type_qualifier (57)
    on left: 13, on right: 11
type_specifier (58)
    on left: 14 15 16 17, on right: 12
function_name (59)
    on left: 18, on right: 7
formal_param (60)
    on left: 19 20, on right: 7
opt_formal_param (61)
    on left: 21 22 23, on right: 19
formal_param_list (62)
    on left: 24 25, on right: 22 25
param_dcl (63)
    on left: 26 27, on right: 24 25
compound_st (64)
    on left: 28, on right: 6 48
opt_dcl_list (65)
    on left: 29 30, on right: 28
declaration_list (66)
    on left: 31 32, on right: 29 32
declaration (67)
    on left: 33, on right: 5 31 32
init_dcl_list (68)
    on left: 34 35, on right: 33 35
init_declarator (69)
    on left: 36 37 38 39, on right: 34 35
declarator (70)
    on left: 40 41, on right: 36 37 38 39
opt_number (71)
    on left: 42 43, on right: 27 41
opt_stat_list (72)
    on left: 44 45, on right: 28
statement_list (73)
    on left: 46 47, on right: 44 47
statement (74)
    on left: 48 49 50 51 52, on right: 46 47 56 57 58
expression_st (75)
    on left: 53, on right: 49
opt_expression (76)
    on left: 54 55, on right: 53 59
if_st (77)
    on left: 56 57, on right: 50
while_st (78)
    on left: 58, on right: 51
return_st (79)
    on left: 59, on right: 52
expression (80)
    on left: 60, on right: 54 56 57 58 93 105
assignment_exp (81)
    on left: 61 62 63 64 65 66 67, on right: 60 62 63 64 65 66 67 100
    101
logical_or_exp (82)
    on left: 68 69, on right: 61 69
logical_and_exp (83)
    on left: 70 71, on right: 68 69 71
equality_exp (84)
    on left: 72 73 74, on right: 70 71 73 74
relational_exp (85)
    on left: 75 76 77 78 79, on right: 72 73 74 76 77 78 79
additive_exp (86)
    on left: 80 81 82, on right: 75 76 77 78 79 81 82
multiplicative_exp (87)
    on left: 83 84 85 86, on right: 80 81 82 84 85 86
unary_exp (88)
    on left: 87 88 89 90 91, on right: 62 63 64 65 66 67 83 84 85 86
    88 89 90 91
postfix_exp (89)
    on left: 92 93 94 95 96, on right: 87 93 94 95 96
opt_actual_param (90)
    on left: 97 98, on right: 94
actual_param (91)
    on left: 99, on right: 97
actual_param_list (92)
    on left: 100 101, on right: 99 101
primary_exp (93)
    on left: 102 103 104 105, on right: 92


state 0

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TCHAR	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    mini_c	go to state 161
    translation_unit	go to state 6
    external_dcl	go to state 7
    function_def	go to state 8
    function_header	go to state 9
    dcl_spec	go to state 10
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 15



state 1

    type_qualifier  ->  TCONST .   (rule 13)

    $default	reduce using rule 13 (type_qualifier)



state 2

    type_specifier  ->  TINT .   (rule 14)

    $default	reduce using rule 14 (type_specifier)



state 3

    type_specifier  ->  TVOID .   (rule 15)

    $default	reduce using rule 15 (type_specifier)



state 4

    type_specifier  ->  TCHAR .   (rule 17)

    $default	reduce using rule 17 (type_specifier)



state 5

    type_specifier  ->  TFLOAT .   (rule 16)

    $default	reduce using rule 16 (type_specifier)



state 6

    mini_c  ->  translation_unit .   (rule 1)
    translation_unit  ->  translation_unit . external_dcl   (rule 3)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TCHAR	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    $default	reduce using rule 1 (mini_c)

    external_dcl	go to state 16
    function_def	go to state 8
    function_header	go to state 9
    dcl_spec	go to state 10
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 15



state 7

    translation_unit  ->  external_dcl .   (rule 2)

    $default	reduce using rule 2 (translation_unit)



state 8

    external_dcl  ->  function_def .   (rule 4)

    $default	reduce using rule 4 (external_dcl)



state 9

    function_def  ->  function_header . compound_st   (rule 6)

    TLBRACE	shift, and go to state 17

    compound_st	go to state 18



state 10

    function_header  ->  dcl_spec . function_name formal_param   (rule 7)
    declaration  ->  dcl_spec . init_dcl_list TSEMI   (rule 33)

    TIDENT	shift, and go to state 19

    function_name	go to state 20
    init_dcl_list	go to state 21
    init_declarator	go to state 22
    declarator	go to state 23



state 11

    dcl_spec  ->  dcl_specifiers .   (rule 8)
    dcl_specifiers  ->  dcl_specifiers . dcl_specifier   (rule 10)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TCHAR	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    $default	reduce using rule 8 (dcl_spec)

    dcl_specifier	go to state 24
    type_qualifier	go to state 13
    type_specifier	go to state 14



state 12

    dcl_specifiers  ->  dcl_specifier .   (rule 9)

    $default	reduce using rule 9 (dcl_specifiers)



state 13

    dcl_specifier  ->  type_qualifier .   (rule 11)

    $default	reduce using rule 11 (dcl_specifier)



state 14

    dcl_specifier  ->  type_specifier .   (rule 12)

    $default	reduce using rule 12 (dcl_specifier)



state 15

    external_dcl  ->  declaration .   (rule 5)

    $default	reduce using rule 5 (external_dcl)



state 16

    translation_unit  ->  translation_unit external_dcl .   (rule 3)

    $default	reduce using rule 3 (translation_unit)



state 17

    compound_st  ->  TLBRACE . opt_dcl_list opt_stat_list TRBRACE   (rule 28)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TCHAR	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    $default	reduce using rule 30 (opt_dcl_list)

    dcl_spec	go to state 25
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    opt_dcl_list	go to state 26
    declaration_list	go to state 27
    declaration	go to state 28



state 18

    function_def  ->  function_header compound_st .   (rule 6)

    $default	reduce using rule 6 (function_def)



state 19

    function_name  ->  TIDENT .   (rule 18)
    declarator  ->  TIDENT .   (rule 40)
    declarator  ->  TIDENT . TLSQUARE opt_number TRSQUARE   (rule 41)

    TLSQUARE	shift, and go to state 29

    TLPAREN	reduce using rule 18 (function_name)
    $default	reduce using rule 40 (declarator)



state 20

    function_header  ->  dcl_spec function_name . formal_param   (rule 7)

    TLPAREN	shift, and go to state 30

    formal_param	go to state 31



state 21

    declaration  ->  dcl_spec init_dcl_list . TSEMI   (rule 33)
    init_dcl_list  ->  init_dcl_list . TCOMMA init_declarator   (rule 35)

    TCOMMA	shift, and go to state 32
    TSEMI	shift, and go to state 33



state 22

    init_dcl_list  ->  init_declarator .   (rule 34)

    $default	reduce using rule 34 (init_dcl_list)



state 23

    init_declarator  ->  declarator .   (rule 36)
    init_declarator  ->  declarator . TASSIGN TINTNUM   (rule 37)
    init_declarator  ->  declarator . TASSIGN TFLOATNUM   (rule 38)
    init_declarator  ->  declarator . TASSIGN TSTRING   (rule 39)

    TASSIGN	shift, and go to state 34

    $default	reduce using rule 36 (init_declarator)



state 24

    dcl_specifiers  ->  dcl_specifiers dcl_specifier .   (rule 10)

    $default	reduce using rule 10 (dcl_specifiers)



state 25

    declaration  ->  dcl_spec . init_dcl_list TSEMI   (rule 33)

    TIDENT	shift, and go to state 35

    init_dcl_list	go to state 21
    init_declarator	go to state 22
    declarator	go to state 23



state 26

    compound_st  ->  TLBRACE opt_dcl_list . opt_stat_list TRBRACE   (rule 28)

    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TLBRACE	shift, and go to state 17
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    TSEMI	reduce using rule 55 (opt_expression)
    $default	reduce using rule 45 (opt_stat_list)

    compound_st	go to state 47
    opt_stat_list	go to state 48
    statement_list	go to state 49
    statement	go to state 50
    expression_st	go to state 51
    opt_expression	go to state 52
    if_st	go to state 53
    while_st	go to state 54
    return_st	go to state 55
    expression	go to state 56
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 27

    opt_dcl_list  ->  declaration_list .   (rule 29)
    declaration_list  ->  declaration_list . declaration   (rule 32)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TCHAR	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    $default	reduce using rule 29 (opt_dcl_list)

    dcl_spec	go to state 25
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    declaration	go to state 67



state 28

    declaration_list  ->  declaration .   (rule 31)

    $default	reduce using rule 31 (declaration_list)



state 29

    declarator  ->  TIDENT TLSQUARE . opt_number TRSQUARE   (rule 41)

    TINTNUM	shift, and go to state 68

    $default	reduce using rule 43 (opt_number)

    opt_number	go to state 69



state 30

    formal_param  ->  TLPAREN . opt_formal_param TRPAREN   (rule 19)
    formal_param  ->  TLPAREN . error   (rule 20)

    error	shift, and go to state 70
    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 71
    TCHAR	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    TRPAREN	reduce using rule 23 (opt_formal_param)

    dcl_spec	go to state 72
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    opt_formal_param	go to state 73
    formal_param_list	go to state 74
    param_dcl	go to state 75



state 31

    function_header  ->  dcl_spec function_name formal_param .   (rule 7)

    $default	reduce using rule 7 (function_header)



state 32

    init_dcl_list  ->  init_dcl_list TCOMMA . init_declarator   (rule 35)

    TIDENT	shift, and go to state 35

    init_declarator	go to state 76
    declarator	go to state 23



state 33

    declaration  ->  dcl_spec init_dcl_list TSEMI .   (rule 33)

    $default	reduce using rule 33 (declaration)



state 34

    init_declarator  ->  declarator TASSIGN . TINTNUM   (rule 37)
    init_declarator  ->  declarator TASSIGN . TFLOATNUM   (rule 38)
    init_declarator  ->  declarator TASSIGN . TSTRING   (rule 39)

    TINTNUM	shift, and go to state 77
    TFLOATNUM	shift, and go to state 78
    TSTRING	shift, and go to state 79



state 35

    declarator  ->  TIDENT .   (rule 40)
    declarator  ->  TIDENT . TLSQUARE opt_number TRSQUARE   (rule 41)

    TLSQUARE	shift, and go to state 29

    $default	reduce using rule 40 (declarator)



state 36

    if_st  ->  TIF . TLPAREN expression TRPAREN statement   (rule 56)
    if_st  ->  TIF . TLPAREN expression TRPAREN statement TELSE statement   (rule 57)

    TLPAREN	shift, and go to state 80



state 37

    return_st  ->  TRETURN . opt_expression TSEMI   (rule 59)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    $default	reduce using rule 55 (opt_expression)

    opt_expression	go to state 81
    expression	go to state 56
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 38

    while_st  ->  TWHILE . TLPAREN expression TRPAREN statement   (rule 58)

    TLPAREN	shift, and go to state 82



state 39

    unary_exp  ->  TMINUS . unary_exp   (rule 88)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    unary_exp	go to state 83
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 40

    unary_exp  ->  TINC . unary_exp   (rule 90)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    unary_exp	go to state 84
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 41

    unary_exp  ->  TDEC . unary_exp   (rule 91)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    unary_exp	go to state 85
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 42

    primary_exp  ->  TIDENT .   (rule 102)

    $default	reduce using rule 102 (primary_exp)



state 43

    primary_exp  ->  TLPAREN . expression TRPAREN   (rule 105)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    expression	go to state 86
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 44

    unary_exp  ->  TNOT . unary_exp   (rule 89)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    unary_exp	go to state 87
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 45

    primary_exp  ->  TINTNUM .   (rule 103)

    $default	reduce using rule 103 (primary_exp)



state 46

    primary_exp  ->  TFLOATNUM .   (rule 104)

    $default	reduce using rule 104 (primary_exp)



state 47

    statement  ->  compound_st .   (rule 48)

    $default	reduce using rule 48 (statement)



state 48

    compound_st  ->  TLBRACE opt_dcl_list opt_stat_list . TRBRACE   (rule 28)

    TRBRACE	shift, and go to state 88



state 49

    opt_stat_list  ->  statement_list .   (rule 44)
    statement_list  ->  statement_list . statement   (rule 47)

    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TLBRACE	shift, and go to state 17
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    TSEMI	reduce using rule 55 (opt_expression)
    $default	reduce using rule 44 (opt_stat_list)

    compound_st	go to state 47
    statement	go to state 89
    expression_st	go to state 51
    opt_expression	go to state 52
    if_st	go to state 53
    while_st	go to state 54
    return_st	go to state 55
    expression	go to state 56
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 50

    statement_list  ->  statement .   (rule 46)

    $default	reduce using rule 46 (statement_list)



state 51

    statement  ->  expression_st .   (rule 49)

    $default	reduce using rule 49 (statement)



state 52

    expression_st  ->  opt_expression . TSEMI   (rule 53)

    TSEMI	shift, and go to state 90



state 53

    statement  ->  if_st .   (rule 50)

    $default	reduce using rule 50 (statement)



state 54

    statement  ->  while_st .   (rule 51)

    $default	reduce using rule 51 (statement)



state 55

    statement  ->  return_st .   (rule 52)

    $default	reduce using rule 52 (statement)



state 56

    opt_expression  ->  expression .   (rule 54)

    $default	reduce using rule 54 (opt_expression)



state 57

    expression  ->  assignment_exp .   (rule 60)

    $default	reduce using rule 60 (expression)



state 58

    assignment_exp  ->  logical_or_exp .   (rule 61)
    logical_or_exp  ->  logical_or_exp . TOR logical_and_exp   (rule 69)

    TOR 	shift, and go to state 91

    $default	reduce using rule 61 (assignment_exp)



state 59

    logical_or_exp  ->  logical_and_exp .   (rule 68)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 71)

    TAND	shift, and go to state 92

    $default	reduce using rule 68 (logical_or_exp)



state 60

    logical_and_exp  ->  equality_exp .   (rule 70)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 73)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 74)

    TEQUAL	shift, and go to state 93
    TNOTEQU	shift, and go to state 94

    $default	reduce using rule 70 (logical_and_exp)



state 61

    equality_exp  ->  relational_exp .   (rule 72)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 76)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 77)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 78)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 79)

    TLESSE	shift, and go to state 95
    TGREATE	shift, and go to state 96
    TLESS	shift, and go to state 97
    TGREAT	shift, and go to state 98

    $default	reduce using rule 72 (equality_exp)



state 62

    relational_exp  ->  additive_exp .   (rule 75)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 81)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 82)

    TPLUS	shift, and go to state 99
    TMINUS	shift, and go to state 100

    $default	reduce using rule 75 (relational_exp)



state 63

    additive_exp  ->  multiplicative_exp .   (rule 80)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 84)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 85)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 86)

    TMUL	shift, and go to state 101
    TDIV	shift, and go to state 102
    TMOD	shift, and go to state 103

    $default	reduce using rule 80 (additive_exp)



state 64

    assignment_exp  ->  unary_exp . TASSIGN assignment_exp   (rule 62)
    assignment_exp  ->  unary_exp . TADDASSIGN assignment_exp   (rule 63)
    assignment_exp  ->  unary_exp . TSUBASSIGN assignment_exp   (rule 64)
    assignment_exp  ->  unary_exp . TMULASSIGN assignment_exp   (rule 65)
    assignment_exp  ->  unary_exp . TDIVASSIGN assignment_exp   (rule 66)
    assignment_exp  ->  unary_exp . TMODASSIGN assignment_exp   (rule 67)
    multiplicative_exp  ->  unary_exp .   (rule 83)

    TASSIGN	shift, and go to state 104
    TADDASSIGN	shift, and go to state 105
    TSUBASSIGN	shift, and go to state 106
    TMULASSIGN	shift, and go to state 107
    TDIVASSIGN	shift, and go to state 108
    TMODASSIGN	shift, and go to state 109

    $default	reduce using rule 83 (multiplicative_exp)



state 65

    unary_exp  ->  postfix_exp .   (rule 87)
    postfix_exp  ->  postfix_exp . TLSQUARE expression TRSQUARE   (rule 93)
    postfix_exp  ->  postfix_exp . TLPAREN opt_actual_param TRPAREN   (rule 94)
    postfix_exp  ->  postfix_exp . TINC   (rule 95)
    postfix_exp  ->  postfix_exp . TDEC   (rule 96)

    TINC	shift, and go to state 110
    TDEC	shift, and go to state 111
    TLPAREN	shift, and go to state 112
    TLSQUARE	shift, and go to state 113

    $default	reduce using rule 87 (unary_exp)



state 66

    postfix_exp  ->  primary_exp .   (rule 92)

    $default	reduce using rule 92 (postfix_exp)



state 67

    declaration_list  ->  declaration_list declaration .   (rule 32)

    $default	reduce using rule 32 (declaration_list)



state 68

    opt_number  ->  TINTNUM .   (rule 42)

    $default	reduce using rule 42 (opt_number)



state 69

    declarator  ->  TIDENT TLSQUARE opt_number . TRSQUARE   (rule 41)

    TRSQUARE	shift, and go to state 114



state 70

    formal_param  ->  TLPAREN error .   (rule 20)

    $default	reduce using rule 20 (formal_param)



state 71

    type_specifier  ->  TVOID .   (rule 15)
    opt_formal_param  ->  TVOID .   (rule 21)

    TRPAREN	reduce using rule 21 (opt_formal_param)
    $default	reduce using rule 15 (type_specifier)



state 72

    param_dcl  ->  dcl_spec . TIDENT   (rule 26)
    param_dcl  ->  dcl_spec . TIDENT TLSQUARE opt_number TRSQUARE   (rule 27)

    TIDENT	shift, and go to state 115



state 73

    formal_param  ->  TLPAREN opt_formal_param . TRPAREN   (rule 19)

    TRPAREN	shift, and go to state 116



state 74

    opt_formal_param  ->  formal_param_list .   (rule 22)
    formal_param_list  ->  formal_param_list . TCOMMA param_dcl   (rule 25)

    TCOMMA	shift, and go to state 117

    $default	reduce using rule 22 (opt_formal_param)



state 75

    formal_param_list  ->  param_dcl .   (rule 24)

    $default	reduce using rule 24 (formal_param_list)



state 76

    init_dcl_list  ->  init_dcl_list TCOMMA init_declarator .   (rule 35)

    $default	reduce using rule 35 (init_dcl_list)



state 77

    init_declarator  ->  declarator TASSIGN TINTNUM .   (rule 37)

    $default	reduce using rule 37 (init_declarator)



state 78

    init_declarator  ->  declarator TASSIGN TFLOATNUM .   (rule 38)

    $default	reduce using rule 38 (init_declarator)



state 79

    init_declarator  ->  declarator TASSIGN TSTRING .   (rule 39)

    $default	reduce using rule 39 (init_declarator)



state 80

    if_st  ->  TIF TLPAREN . expression TRPAREN statement   (rule 56)
    if_st  ->  TIF TLPAREN . expression TRPAREN statement TELSE statement   (rule 57)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    expression	go to state 118
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 81

    return_st  ->  TRETURN opt_expression . TSEMI   (rule 59)

    TSEMI	shift, and go to state 119



state 82

    while_st  ->  TWHILE TLPAREN . expression TRPAREN statement   (rule 58)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    expression	go to state 120
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 83

    unary_exp  ->  TMINUS unary_exp .   (rule 88)

    $default	reduce using rule 88 (unary_exp)



state 84

    unary_exp  ->  TINC unary_exp .   (rule 90)

    $default	reduce using rule 90 (unary_exp)



state 85

    unary_exp  ->  TDEC unary_exp .   (rule 91)

    $default	reduce using rule 91 (unary_exp)



state 86

    primary_exp  ->  TLPAREN expression . TRPAREN   (rule 105)

    TRPAREN	shift, and go to state 121



state 87

    unary_exp  ->  TNOT unary_exp .   (rule 89)

    $default	reduce using rule 89 (unary_exp)



state 88

    compound_st  ->  TLBRACE opt_dcl_list opt_stat_list TRBRACE .   (rule 28)

    $default	reduce using rule 28 (compound_st)



state 89

    statement_list  ->  statement_list statement .   (rule 47)

    $default	reduce using rule 47 (statement_list)



state 90

    expression_st  ->  opt_expression TSEMI .   (rule 53)

    $default	reduce using rule 53 (expression_st)



state 91

    logical_or_exp  ->  logical_or_exp TOR . logical_and_exp   (rule 69)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    logical_and_exp	go to state 122
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 123
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 92

    logical_and_exp  ->  logical_and_exp TAND . equality_exp   (rule 71)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    equality_exp	go to state 124
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 123
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 93

    equality_exp  ->  equality_exp TEQUAL . relational_exp   (rule 73)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    relational_exp	go to state 125
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 123
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 94

    equality_exp  ->  equality_exp TNOTEQU . relational_exp   (rule 74)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    relational_exp	go to state 126
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 123
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 95

    relational_exp  ->  relational_exp TLESSE . additive_exp   (rule 79)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    additive_exp	go to state 127
    multiplicative_exp	go to state 63
    unary_exp	go to state 123
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 96

    relational_exp  ->  relational_exp TGREATE . additive_exp   (rule 78)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    additive_exp	go to state 128
    multiplicative_exp	go to state 63
    unary_exp	go to state 123
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 97

    relational_exp  ->  relational_exp TLESS . additive_exp   (rule 77)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    additive_exp	go to state 129
    multiplicative_exp	go to state 63
    unary_exp	go to state 123
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 98

    relational_exp  ->  relational_exp TGREAT . additive_exp   (rule 76)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    additive_exp	go to state 130
    multiplicative_exp	go to state 63
    unary_exp	go to state 123
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 99

    additive_exp  ->  additive_exp TPLUS . multiplicative_exp   (rule 81)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    multiplicative_exp	go to state 131
    unary_exp	go to state 123
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 100

    additive_exp  ->  additive_exp TMINUS . multiplicative_exp   (rule 82)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    multiplicative_exp	go to state 132
    unary_exp	go to state 123
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 101

    multiplicative_exp  ->  multiplicative_exp TMUL . unary_exp   (rule 84)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    unary_exp	go to state 133
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 102

    multiplicative_exp  ->  multiplicative_exp TDIV . unary_exp   (rule 85)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    unary_exp	go to state 134
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 103

    multiplicative_exp  ->  multiplicative_exp TMOD . unary_exp   (rule 86)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    unary_exp	go to state 135
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 104

    assignment_exp  ->  unary_exp TASSIGN . assignment_exp   (rule 62)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    assignment_exp	go to state 136
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 105

    assignment_exp  ->  unary_exp TADDASSIGN . assignment_exp   (rule 63)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    assignment_exp	go to state 137
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 106

    assignment_exp  ->  unary_exp TSUBASSIGN . assignment_exp   (rule 64)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    assignment_exp	go to state 138
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 107

    assignment_exp  ->  unary_exp TMULASSIGN . assignment_exp   (rule 65)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    assignment_exp	go to state 139
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 108

    assignment_exp  ->  unary_exp TDIVASSIGN . assignment_exp   (rule 66)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    assignment_exp	go to state 140
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 109

    assignment_exp  ->  unary_exp TMODASSIGN . assignment_exp   (rule 67)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    assignment_exp	go to state 141
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 110

    postfix_exp  ->  postfix_exp TINC .   (rule 95)

    $default	reduce using rule 95 (postfix_exp)



state 111

    postfix_exp  ->  postfix_exp TDEC .   (rule 96)

    $default	reduce using rule 96 (postfix_exp)



state 112

    postfix_exp  ->  postfix_exp TLPAREN . opt_actual_param TRPAREN   (rule 94)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    $default	reduce using rule 98 (opt_actual_param)

    assignment_exp	go to state 142
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    opt_actual_param	go to state 143
    actual_param	go to state 144
    actual_param_list	go to state 145
    primary_exp	go to state 66



state 113

    postfix_exp  ->  postfix_exp TLSQUARE . expression TRSQUARE   (rule 93)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    expression	go to state 146
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 114

    declarator  ->  TIDENT TLSQUARE opt_number TRSQUARE .   (rule 41)

    $default	reduce using rule 41 (declarator)



state 115

    param_dcl  ->  dcl_spec TIDENT .   (rule 26)
    param_dcl  ->  dcl_spec TIDENT . TLSQUARE opt_number TRSQUARE   (rule 27)

    TLSQUARE	shift, and go to state 147

    $default	reduce using rule 26 (param_dcl)



state 116

    formal_param  ->  TLPAREN opt_formal_param TRPAREN .   (rule 19)

    $default	reduce using rule 19 (formal_param)



state 117

    formal_param_list  ->  formal_param_list TCOMMA . param_dcl   (rule 25)

    TCONST	shift, and go to state 1
    TINT	shift, and go to state 2
    TVOID	shift, and go to state 3
    TCHAR	shift, and go to state 4
    TFLOAT	shift, and go to state 5

    dcl_spec	go to state 72
    dcl_specifiers	go to state 11
    dcl_specifier	go to state 12
    type_qualifier	go to state 13
    type_specifier	go to state 14
    param_dcl	go to state 148



state 118

    if_st  ->  TIF TLPAREN expression . TRPAREN statement   (rule 56)
    if_st  ->  TIF TLPAREN expression . TRPAREN statement TELSE statement   (rule 57)

    TRPAREN	shift, and go to state 149



state 119

    return_st  ->  TRETURN opt_expression TSEMI .   (rule 59)

    $default	reduce using rule 59 (return_st)



state 120

    while_st  ->  TWHILE TLPAREN expression . TRPAREN statement   (rule 58)

    TRPAREN	shift, and go to state 150



state 121

    primary_exp  ->  TLPAREN expression TRPAREN .   (rule 105)

    $default	reduce using rule 105 (primary_exp)



state 122

    logical_or_exp  ->  logical_or_exp TOR logical_and_exp .   (rule 69)
    logical_and_exp  ->  logical_and_exp . TAND equality_exp   (rule 71)

    TAND	shift, and go to state 92

    $default	reduce using rule 69 (logical_or_exp)



state 123

    multiplicative_exp  ->  unary_exp .   (rule 83)

    $default	reduce using rule 83 (multiplicative_exp)



state 124

    logical_and_exp  ->  logical_and_exp TAND equality_exp .   (rule 71)
    equality_exp  ->  equality_exp . TEQUAL relational_exp   (rule 73)
    equality_exp  ->  equality_exp . TNOTEQU relational_exp   (rule 74)

    TEQUAL	shift, and go to state 93
    TNOTEQU	shift, and go to state 94

    $default	reduce using rule 71 (logical_and_exp)



state 125

    equality_exp  ->  equality_exp TEQUAL relational_exp .   (rule 73)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 76)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 77)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 78)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 79)

    TLESSE	shift, and go to state 95
    TGREATE	shift, and go to state 96
    TLESS	shift, and go to state 97
    TGREAT	shift, and go to state 98

    $default	reduce using rule 73 (equality_exp)



state 126

    equality_exp  ->  equality_exp TNOTEQU relational_exp .   (rule 74)
    relational_exp  ->  relational_exp . TGREAT additive_exp   (rule 76)
    relational_exp  ->  relational_exp . TLESS additive_exp   (rule 77)
    relational_exp  ->  relational_exp . TGREATE additive_exp   (rule 78)
    relational_exp  ->  relational_exp . TLESSE additive_exp   (rule 79)

    TLESSE	shift, and go to state 95
    TGREATE	shift, and go to state 96
    TLESS	shift, and go to state 97
    TGREAT	shift, and go to state 98

    $default	reduce using rule 74 (equality_exp)



state 127

    relational_exp  ->  relational_exp TLESSE additive_exp .   (rule 79)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 81)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 82)

    TPLUS	shift, and go to state 99
    TMINUS	shift, and go to state 100

    $default	reduce using rule 79 (relational_exp)



state 128

    relational_exp  ->  relational_exp TGREATE additive_exp .   (rule 78)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 81)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 82)

    TPLUS	shift, and go to state 99
    TMINUS	shift, and go to state 100

    $default	reduce using rule 78 (relational_exp)



state 129

    relational_exp  ->  relational_exp TLESS additive_exp .   (rule 77)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 81)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 82)

    TPLUS	shift, and go to state 99
    TMINUS	shift, and go to state 100

    $default	reduce using rule 77 (relational_exp)



state 130

    relational_exp  ->  relational_exp TGREAT additive_exp .   (rule 76)
    additive_exp  ->  additive_exp . TPLUS multiplicative_exp   (rule 81)
    additive_exp  ->  additive_exp . TMINUS multiplicative_exp   (rule 82)

    TPLUS	shift, and go to state 99
    TMINUS	shift, and go to state 100

    $default	reduce using rule 76 (relational_exp)



state 131

    additive_exp  ->  additive_exp TPLUS multiplicative_exp .   (rule 81)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 84)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 85)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 86)

    TMUL	shift, and go to state 101
    TDIV	shift, and go to state 102
    TMOD	shift, and go to state 103

    $default	reduce using rule 81 (additive_exp)



state 132

    additive_exp  ->  additive_exp TMINUS multiplicative_exp .   (rule 82)
    multiplicative_exp  ->  multiplicative_exp . TMUL unary_exp   (rule 84)
    multiplicative_exp  ->  multiplicative_exp . TDIV unary_exp   (rule 85)
    multiplicative_exp  ->  multiplicative_exp . TMOD unary_exp   (rule 86)

    TMUL	shift, and go to state 101
    TDIV	shift, and go to state 102
    TMOD	shift, and go to state 103

    $default	reduce using rule 82 (additive_exp)



state 133

    multiplicative_exp  ->  multiplicative_exp TMUL unary_exp .   (rule 84)

    $default	reduce using rule 84 (multiplicative_exp)



state 134

    multiplicative_exp  ->  multiplicative_exp TDIV unary_exp .   (rule 85)

    $default	reduce using rule 85 (multiplicative_exp)



state 135

    multiplicative_exp  ->  multiplicative_exp TMOD unary_exp .   (rule 86)

    $default	reduce using rule 86 (multiplicative_exp)



state 136

    assignment_exp  ->  unary_exp TASSIGN assignment_exp .   (rule 62)

    $default	reduce using rule 62 (assignment_exp)



state 137

    assignment_exp  ->  unary_exp TADDASSIGN assignment_exp .   (rule 63)

    $default	reduce using rule 63 (assignment_exp)



state 138

    assignment_exp  ->  unary_exp TSUBASSIGN assignment_exp .   (rule 64)

    $default	reduce using rule 64 (assignment_exp)



state 139

    assignment_exp  ->  unary_exp TMULASSIGN assignment_exp .   (rule 65)

    $default	reduce using rule 65 (assignment_exp)



state 140

    assignment_exp  ->  unary_exp TDIVASSIGN assignment_exp .   (rule 66)

    $default	reduce using rule 66 (assignment_exp)



state 141

    assignment_exp  ->  unary_exp TMODASSIGN assignment_exp .   (rule 67)

    $default	reduce using rule 67 (assignment_exp)



state 142

    actual_param_list  ->  assignment_exp .   (rule 100)

    $default	reduce using rule 100 (actual_param_list)



state 143

    postfix_exp  ->  postfix_exp TLPAREN opt_actual_param . TRPAREN   (rule 94)

    TRPAREN	shift, and go to state 151



state 144

    opt_actual_param  ->  actual_param .   (rule 97)

    $default	reduce using rule 97 (opt_actual_param)



state 145

    actual_param  ->  actual_param_list .   (rule 99)
    actual_param_list  ->  actual_param_list . TCOMMA assignment_exp   (rule 101)

    TCOMMA	shift, and go to state 152

    $default	reduce using rule 99 (actual_param)



state 146

    postfix_exp  ->  postfix_exp TLSQUARE expression . TRSQUARE   (rule 93)

    TRSQUARE	shift, and go to state 153



state 147

    param_dcl  ->  dcl_spec TIDENT TLSQUARE . opt_number TRSQUARE   (rule 27)

    TINTNUM	shift, and go to state 68

    $default	reduce using rule 43 (opt_number)

    opt_number	go to state 154



state 148

    formal_param_list  ->  formal_param_list TCOMMA param_dcl .   (rule 25)

    $default	reduce using rule 25 (formal_param_list)



state 149

    if_st  ->  TIF TLPAREN expression TRPAREN . statement   (rule 56)
    if_st  ->  TIF TLPAREN expression TRPAREN . statement TELSE statement   (rule 57)

    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TLBRACE	shift, and go to state 17
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    $default	reduce using rule 55 (opt_expression)

    compound_st	go to state 47
    statement	go to state 155
    expression_st	go to state 51
    opt_expression	go to state 52
    if_st	go to state 53
    while_st	go to state 54
    return_st	go to state 55
    expression	go to state 56
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 150

    while_st  ->  TWHILE TLPAREN expression TRPAREN . statement   (rule 58)

    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TLBRACE	shift, and go to state 17
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    $default	reduce using rule 55 (opt_expression)

    compound_st	go to state 47
    statement	go to state 156
    expression_st	go to state 51
    opt_expression	go to state 52
    if_st	go to state 53
    while_st	go to state 54
    return_st	go to state 55
    expression	go to state 56
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 151

    postfix_exp  ->  postfix_exp TLPAREN opt_actual_param TRPAREN .   (rule 94)

    $default	reduce using rule 94 (postfix_exp)



state 152

    actual_param_list  ->  actual_param_list TCOMMA . assignment_exp   (rule 101)

    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    assignment_exp	go to state 157
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 153

    postfix_exp  ->  postfix_exp TLSQUARE expression TRSQUARE .   (rule 93)

    $default	reduce using rule 93 (postfix_exp)



state 154

    param_dcl  ->  dcl_spec TIDENT TLSQUARE opt_number . TRSQUARE   (rule 27)

    TRSQUARE	shift, and go to state 158



state 155

    if_st  ->  TIF TLPAREN expression TRPAREN statement .   (rule 56)
    if_st  ->  TIF TLPAREN expression TRPAREN statement . TELSE statement   (rule 57)

    TELSE	shift, and go to state 159

    $default	reduce using rule 56 (if_st)



state 156

    while_st  ->  TWHILE TLPAREN expression TRPAREN statement .   (rule 58)

    $default	reduce using rule 58 (while_st)



state 157

    actual_param_list  ->  actual_param_list TCOMMA assignment_exp .   (rule 101)

    $default	reduce using rule 101 (actual_param_list)



state 158

    param_dcl  ->  dcl_spec TIDENT TLSQUARE opt_number TRSQUARE .   (rule 27)

    $default	reduce using rule 27 (param_dcl)



state 159

    if_st  ->  TIF TLPAREN expression TRPAREN statement TELSE . statement   (rule 57)

    TIF 	shift, and go to state 36
    TRETURN	shift, and go to state 37
    TWHILE	shift, and go to state 38
    TMINUS	shift, and go to state 39
    TINC	shift, and go to state 40
    TDEC	shift, and go to state 41
    TIDENT	shift, and go to state 42
    TLPAREN	shift, and go to state 43
    TLBRACE	shift, and go to state 17
    TNOT	shift, and go to state 44
    TINTNUM	shift, and go to state 45
    TFLOATNUM	shift, and go to state 46

    $default	reduce using rule 55 (opt_expression)

    compound_st	go to state 47
    statement	go to state 160
    expression_st	go to state 51
    opt_expression	go to state 52
    if_st	go to state 53
    while_st	go to state 54
    return_st	go to state 55
    expression	go to state 56
    assignment_exp	go to state 57
    logical_or_exp	go to state 58
    logical_and_exp	go to state 59
    equality_exp	go to state 60
    relational_exp	go to state 61
    additive_exp	go to state 62
    multiplicative_exp	go to state 63
    unary_exp	go to state 64
    postfix_exp	go to state 65
    primary_exp	go to state 66



state 160

    if_st  ->  TIF TLPAREN expression TRPAREN statement TELSE statement .   (rule 57)

    $default	reduce using rule 57 (if_st)



state 161

    $   	go to state 162



state 162

    $   	go to state 163



state 163

    $default	accept
